/*
 * Copyright 2023 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(freq_counter_all_weights.h) */
/* BINDTOOL_HEADER_FILE_HASH(aba3202d39f791e79d32044c61bf8200)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/mikes_oot/freq_counter_all_weights.h>
// pydoc.h is automatically generated in the build directory
#include <freq_counter_all_weights_pydoc.h>

void bind_freq_counter_all_weights(py::module& m)
{

    using freq_counter_all_weights = ::gr::mikes_oot::freq_counter_all_weights;


    py::class_<freq_counter_all_weights,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<freq_counter_all_weights>>(
        m, "freq_counter_all_weights", D(freq_counter_all_weights))

        .def(py::init(&freq_counter_all_weights::make),
             py::arg("vec_len"),
             py::arg("samp_rate"),
             py::arg("retune_threshold"),
             py::arg("auto_tune"),
             py::arg("tune_avg"),
             py::arg("uhd_channel"),
             py::arg("baseband"),
             D(freq_counter_all_weights, make))


        ;
}
